Route 53:
DNS Record Types:

Nameservers:
	They are the records which allow delegation to occur in DNS.
	they are used to maintain a zone by an organization.
	
A and AAAA:
	these types of records map host names to ip addresses
	A    ----> ipv4
	AAAA ----> ipv6
	
CNAME:
	maps host to host, canonical name
	reduce  overhead by mapping multiple host names to one single host, creates shortcut
	CNAME can not point to any other ip address, only other cnames 
	
MXRecords:
	It has 2 parts priority and a value.
	if there is only host then it means that host is inside the same zone 
	if there is a dot on the right of the host, it means that it is a FQDN and it might be part of the same zone or another zone altogether.
	used for emails e.g. hi@google.com, first it focus on the domain and then it initiates MX queries
	it gets the record seeing the priority of MX records and use SMTP to connect to the mail server as it gets back the result of that query
	Summary MX record is how a server finds the mail server (SMTP) for a domain.
	
TXTrecords:
	Allows to add arbitrary text to a doamin
	used to prove domain ownership
	add sometext data in the record and use it to prove identity to manage the domains
	can be used to detect spam
	
TTL:
	TTL ( Time To Live ) can be set on a DNS record.
	cached data non-authoritative is enabled and normally is equivalent to authoritative ( queries against nameservers )
	low TTL values means more queries against nameserver and hence more time to establish  link (authoritative)
	high TTL values means less control over data transmission when authoritative link changes bcz of old cache

DNS Public Hosted Zones:
	Hosted Zone is a DNS DB for a domain e.g. a4l.com etc
	Hosted Zones are Databases which are referenced via delegations using nameservers records.
	Hosted Zone referenced this way is Authoritative for a domain.
	
	Public HZ is a DNS DB ( zone files ) hosted on R53 ( Public Name server )
	This means accessbile from Public internet and VPCs usig R53 resolver
	hosted on 4 nameservers specific for the zone
	ns records are used to point at these NS
	resource records created within the hosted zone which contains actual data ( MX, TXT, www )
	VPC uses VPC +2 Address to access DNS reolver and query dns
	public ---> ISP resolver ----> root servers ----> .com ( main domain ) ns records ----> specific doamin ns records ( a4l.com )
	
DNS Private hosted Zones:
	 Just like public hosted zone but it is not public
	 Associated with VPC in AWS and only accessible from within that VPC
	 use differentr account support via CLI/API
	 Spit view ( overlapping public / private ) for public and internal use with same zone name

CNAME vs ALIAS:
	CNAME is invalid for naked/apex domain.
	With CNAME , mappig apex domain to DNS Name (ELBs) would be invalid.
	ALIAS records are used to map a NAME to an AWS Resource
	It can be used to map both naked/apex and normal records.
	for non-naked/apex domain you could use CNAME or ALIAS records
	No cahrges for ALIAS record so default is to pick ALIAS record for AWS Resources whether naked or non naked domain
	ALIAS records copuld be of A records or CNAME depending on what it is pointing at.
	ALIAS can only be used if R53 is hosting your domain.
	
ROUTING POLICIES:
Simple Routing:
	Simple routing supports 1 record per name (www ---> A)
	A record can have multiple values (A) which it delivers randomly to client all of them and then client chooses one to access the server.
	It does not support health check ( if the servers A address is refrencing to is operational or not ).

Health Checks:
	Are separate from but used by the Records in R53.
	Carried out by a fleet of health checkers distributed globally.
	Checks are made every 30s by default (10s will have additional costs)
	TCP=10s endpoint success
	HTTP=4s tcp connection to endpoint
	HTTP=2s response from the endpoint via 200 or 300 Codes
	String Matching along HTTP/HTTPS = connection 4s, response 2s alongnwith response body wich must contain specific string that you have specified.
	The string must appear entirely within the first 5120 bytes of the response body or the endpoint fails the health check
	Types:
		Endpoint checks ----> endpoint that you have specified
		CloudWatch Alarm checks ----> configured separately based on CW Alarms, in-OS or in-app tests if you use the CW Agent
		Calculated checks ----> check of checks

	Temporary maintenance can be done via disable health check option without having to delete the health check completly
	Create a CW Alarm and send SNS Notification based on that if we want to be notified for the heath check failure
	If 18% of health checkers report is healthy than the health check is healthy otherwise unhealthy

Failover Routing:
	Two records of the same domain names are kept at the DNS hosted zone Primary and Secondary
	Health checks are made on the Primary, if healthy traffic is routed to it else the secondary value of the same name is returned but no health check on secondary
	Use case is the configuration of active passive failover

	Naming of the S3 bucket as secondary value is important, it should match with the domain name such as if domain name is: a4l1337.org then bucket: www.a4l1337.org

Multi Value Routing:
	Mixture of simple and failover routing
	Can create multiple records (e.g A records) with the same name
	8 healthy records are returned if health checks are configured with each record. If more than 8 are selected randomly
	If any record fails health check then it is not returned to client and removed.
	Not a replacement for Load Balancer

Weighted Routing:
	Simple form of Load Balancer or testing new software version
	Multiple records with the same name
	Assign record weights, distribute traffic according to the weight of a single record versus the total weight
	Setting record weight to 0 means you don't want this reord to be returned, but if you set all records to 0 means you want all records to be returned
	Health checks can repeat the process of getting the right weighted record if its healthy only, they don't remove the health weights from the calculations and don't adjust the total weight
